## Use the latest 2.1 version of CircleCI pipeline process engine.
## See: https://circleci.com/docs/2.0/configuration-reference
#version: 2.1
#
## Define a job to be invoked later in a workflow.
## See: https://circleci.com/docs/2.0/configuration-reference/#jobs
#jobs:
#  say-hello:
#    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
#    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
#    docker:
#      - image: cimg/base:stable
#    # Add steps to the job
#    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
#    steps:
#      - checkout
#      - run:
#          name: "Say hello"
#          command: "echo Hello, World!"
#
## Invoke jobs via workflows
## See: https://circleci.com/docs/2.0/configuration-reference/#workflows
#workflows:
#  say-hello-workflow:
#    jobs:
#      - say-hello
##
#version: 2
#jobs:
  build:
    working_directory: ~/ProductCatalog
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run UnitTest
          command: ./gradlew test
      - store_artifacts:
          path: app/build/outputs/apk/debug/
          destination: apks/
      - store_test_results:
          path: app/build/test-results
